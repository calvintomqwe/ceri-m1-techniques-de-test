version: 2.1

# Déclaration de l'orb Codecov
orbs:
  codecov: codecov/codecov@4.0.1  # Charge l'orb Codecov

jobs:
  # Job de build qui génère le rapport JaCoCo
  build:
    docker:
      - image: circleci/openjdk:8  # Utilisation de l'image Docker avec OpenJDK 8
    steps:
      - checkout  # Vérifie le code source depuis le repository
      - run:
          name: Build and Test with Maven
          command: mvn clean verify  # Exécute le build et les tests Maven
      - run:
          name: Generate JaCoCo Report
          command: mvn jacoco:report  # Génére le rapport JaCoCo
      - persist_to_workspace:
          root: target  # Le répertoire où se trouvent les fichiers à partager
          paths:
            - site/jacoco  # Le chemin vers le rapport JaCoCo généré

  # Job qui attache l'espace de travail et envoie le rapport à Codecov
  upload-coverage:
    docker:
      - image: circleci/openjdk:8  # Utilisation de l'image Docker avec OpenJDK 8
    steps:
      - attach_workspace:
          at: /workspace  # Attache l'espace de travail au répertoire /workspace
      - run:
          name: Vérifier le rapport JaCoCo
          command: ls /workspace/site/jacoco  # Vérifie si le fichier est présent
      - codecov/upload:
          file: /workspace/site/jacoco/jacoco.xml  # Envoi le rapport JaCoCo à Codecov
          token: CODECOV_TOKEN  # Token pour l'authentification (assurez-vous qu'il est configuré dans CircleCI)

# Définir le workflow
workflows:
  version: 2
  build-and-upload:
    jobs:
      - build  # Le job build doit être exécuté en premier
      - upload-coverage:  # Le job upload-coverage doit être exécuté après build
          requires:
            - build  # Le job upload-coverage dépend du job build
